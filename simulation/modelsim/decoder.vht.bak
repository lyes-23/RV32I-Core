

LIBRARY ieee;                                               
USE ieee.std_logic_1164.all;                                

ENTITY decoder_vhd_tst IS
END decoder_vhd_tst;
ARCHITECTURE decoder_arch OF decoder_vhd_tst IS

                                                
SIGNAL imm : STD_LOGIC_VECTOR(31 DOWNTO 0);
SIGNAL instr : STD_LOGIC_VECTOR(31 DOWNTO 0);
SIGNAL loadpc : STD_LOGIC;
SIGNAL op_out : STD_LOGIC_VECTOR(10 DOWNTO 0);
SIGNAL rd : STD_LOGIC_VECTOR(4 DOWNTO 0);
SIGNAL rd_en : STD_LOGIC;
SIGNAL rs1 : STD_LOGIC_VECTOR(4 DOWNTO 0);
SIGNAL rs2 : STD_LOGIC_VECTOR(4 DOWNTO 0);
COMPONENT decoder
	PORT (
	imm : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
	instr : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
	loadpc : OUT STD_LOGIC;
	op_out : OUT STD_LOGIC_VECTOR(10 DOWNTO 0);
	rd : OUT STD_LOGIC_VECTOR(4 DOWNTO 0);
	rd_en : OUT STD_LOGIC;
	rs1 : OUT STD_LOGIC_VECTOR(4 DOWNTO 0);
	rs2 : OUT STD_LOGIC_VECTOR(4 DOWNTO 0)
	);
END COMPONENT;
BEGIN
	i1 : decoder
	PORT MAP (
-- list connections between master ports and signals
	imm => imm,
	instr => instr,
	loadpc => loadpc,
	op_out => op_out,
	rd => rd,
	rd_en => rd_en,
	rs1 => rs1,
	rs2 => rs2
	);
init : PROCESS                                               
-- variable declarations                                     
BEGIN                                                        
        instr <= x"00118133";
			wait for 20 ns; 
WAIT;                                                       
END PROCESS init;                                           
always : PROCESS                                              
 
WAIT;                                                        
END PROCESS always;                                          
END decoder_arch;
